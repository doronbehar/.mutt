# {{{1 Identity
set folder = "~/.local/share/mail/gmail"
set from = "Doron Behar <doron.behar@gmail.com>"
set realname = "Doron Behar"

# {{{1 Folders
set spoolfile = +INBOX
set record = "+[Gmail]/Sent Mail"
set postponed = "+[Gmail]/Drafts"
set trash = "+[Gmail]/Trash"
set mbox = "+[Gmail]/All Mail"
set copy = no
source ~/.mutt/mailboxes

# {{{1 User Interface
set sidebar_visible = yes
set sidebar_format = "%B%?F? [%F]?%* %?N?%N/?%S"
set sidebar_new_mail_only = no
set sidebar_sort_method = path
set mail_check_stats
set sort = threads
set strict_threads = yes

# {{{1 Preview Pane
# number of index lines to show
set pager_index_lines = 15
# number of context lines to show
set pager_context = 3
# don't go to next message automatically
set pager_stop = yes
# scroll in menus
set menu_scroll = yes
# show tildes like in vim
set tilde = yes
# no ugly plus signs
set markers = no

# {{{1 General Settings:
set message_cachedir = ~/.cache/mutt/messages
set message_cachedir = ~/.cache/mutt/messages
set header_cache = ~/.cache/mutt/header
set tmpdir = ~/.cache/mutt/compositions
set sendmail = "/usr/bin/msmtp"
set send_charset = "utf-8"
set charset = "utf-8"
auto_view text/html
alternative_order text/plain text/enriched text/html
set pager_stop = yes
set display_filter = "/usr/bin/fribidi"
set query_command = "khard email -p %s"

# {{{1 GPG
set pgp_autosign = yes
set pgp_replyencrypt = yes
set pgp_replysign = yes
set pgp_verify_sig = yes
set pgp_sign_as = duron
set pgp_use_gpg_agent = yes
set crypt_autosign = yes
set crypt_replyencrypt = yes
# decode application/pgp
set pgp_decode_command="gpg --status-fd=2 %?p?--passphrase-fd 0? --no-verbose --quiet --batch --output - %f"
# verify a pgp/mime signature
set pgp_verify_command="gpg --status-fd=2 --no-verbose --quiet --batch --output - --verify %s %f"
# decrypt a pgp/mime attachment
set pgp_decrypt_command="gpg --status-fd=2 %?p?--passphrase-fd 0? --no-verbose --quiet --batch --output - %f"
# create a pgp/mime signed attachment
set pgp_sign_command="gpg --no-verbose --batch --quiet --output - %?p?--passphrase-fd 0? --armor --detach-sign --textmode %?a?-u %a? %f"
# create a application/pgp signed (old-style) message
set pgp_clearsign_command="gpg --no-verbose --batch --quiet --output - %?p?--passphrase-fd 0? --armor --textmode --clearsign %?a?-u %a? %f"
# create a pgp/mime encrypted attachment
set pgp_encrypt_only_command="pgpewrap gpg --batch --quiet --no-verbose --output - --encrypt --textmode --armor --always-trust -- -r %r -- %f"
# create a pgp/mime encrypted and signed attachment
set pgp_encrypt_sign_command="pgpewrap gpg %?p?--passphrase-fd 0? --batch --quiet --no-verbose --textmode --output - --encrypt --sign %?a?-u %a? --armor --always-trust -- -r %r -- %f"
# import a key into the public key ring
set pgp_import_command="gpg --no-verbose --import %f"
# export a key from the public key ring
set pgp_export_command="gpg --no-verbose --export --armor %r"
# verify a key
set pgp_verify_key_command="gpg --verbose --batch --fingerprint --check-sigs %r"
# read in the public key ring
set pgp_list_pubring_command="gpg --no-verbose --batch --quiet --with-colons --with-fingerprint --with-fingerprint --list-keys %r"
# read in the secret key ring
set pgp_list_secring_command="gpg --no-verbose --batch --quiet --with-colons --with-fingerprint --with-fingerprint --list-secret-keys %r"
# fetch keys
#set pgp_getkeys_command="pkspxycwrap %r"
# pattern for good signature - may need to be adapted to locale!
#set pgp_good_sign="^gpgv?: Good signature from "
# OK, here's a version which uses gnupg's message catalog:
#set pgp_good_sign="`gettext -d gnupg -s 'Good signature from "' | tr -d '"'`"
# This version uses --status-fd messages
set pgp_good_sign="^\\[GNUPG:\\] GOODSIG"
# pattern to verify a decryption occurred
set pgp_decryption_okay="^\\[GNUPG:\\] DECRYPTION_OKAY"

# {{{1 Keyboard
## Vim like bindings.
bind pager j next-line
bind pager k previous-line
bind attach,index,pager \CD next-page
bind attach,index,pager \CU previous-page
bind pager g top
bind pager G bottom
bind attach,index g noop
bind attach,index gg first-entry
bind attach,index G last-entry
## Mailboxes
bind index,pager \Ci sidebar-prev
bind index,pager \Cu sidebar-next
bind index,pager \Co sidebar-open
## editor
bind editor <space> noop
bind editor <Tab> complete-query
### Fix backspace
bind editor <backspace> backspace
bind editor <delete> delete-char
## Move messages shortcuts
macro index,pager y "<save-message>=[Gmail]/All Mail<enter><enter>" "Archive message"
macro index,pager d "<save-message>=[Gmail]/Trash<enter><enter>" "Trash message"
## Mailboxes navigation
macro index gi "<change-folder>=INBOX<enter>" "Go to inbox"
macro index gs "<change-folder>=[Gmail]/Starred<enter>" "Go to starred messages"
macro index gt "<change-folder>=[Gmail]/Sent Mail<enter>" "Go to sent mail"
# Different from gmail's web gui's keyboard shortcuts
macro index gp "<change-folder>=[Gmail]/Drafts<enter>" "Go to drafts"
macro index ga "<change-folder>=[Gmail]/All Mail<enter>" "Go to all mail"
# Not available in gmail's web gui's keyboard shortcuts.
macro index gd "<change-folder>=[Gmail]/Trash<enter>" "Go to Trash"
# macro for converting markdown to html using pandoc and webtex
macro compose \Cf "F pandoc -s --webtex -f markdown -t html \ny^T^Utext/html; charset=utf-8\n"
set wait_key=no
# macro for opening normal w3m instance of a pure text/html inline attachment.
macro attach w "|w3m -T text/html\n"

# {{{1 Colors
color hdrdefault blue black
color quoted blue black
color signature blue black
color attachment brightred black
color prompt brightmagenta black
color message brightred black
color error brightred black
color indicator black brightred
color status brightgreen blue
color tree white black
color normal white black
color markers brightred black
color search white black
color tilde brightmagenta black
color index blue black ~F

# vim:foldmethod=marker
